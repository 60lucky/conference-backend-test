"""create tables

Revision ID: 98e2abe56d46
Revises: 
Create Date: 2023-06-22 13:29:37.579201

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '98e2abe56d46'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    USER_ID = 'users.userID'
    CONFERENCE_ID = 'conferences.conferenceID'
    PAPER_ID = 'papers.paperID'

    op.create_table('institutions',
    sa.Column('institutionID', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('institutionName', sa.String(length=255), nullable=False),
    sa.Column('institutionAddress', sa.Text(), nullable=False),
    sa.Column('emailID', sa.String(length=255), nullable=False),
    sa.Column('contactNum', sa.String(length=10), nullable=False),
    sa.Column('membership', sa.Enum('Choice1', 'Choice2'), nullable=False),
    sa.PrimaryKeyConstraint('institutionID')
    )
    op.create_table('journals',
    sa.Column('journalID', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('journalName', sa.String(length=255), nullable=False),
    sa.Column('journalAddress', sa.Text(), nullable=False),
    sa.Column('emailID', sa.String(length=255), nullable=False),
    sa.Column('contactNum', sa.BigInteger(), nullable=False),
    sa.PrimaryKeyConstraint('journalID')
    )
    op.create_table('users',
    sa.Column('userID', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('roleID', sa.Enum('SuperAdmin', 'Admin', 'Coordinator', 'Editor', 'AssociateEditor', 'Reviewer', 'Author'), nullable=True),
    sa.Column('institutionID', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['institutionID'], ['institutions.institutionID'], ),
    sa.PrimaryKeyConstraint('userID')
    )
    op.create_table('conferences',
    sa.Column('conferenceID', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('conferenceTheme', sa.String(length=255), nullable=False),
    sa.Column('inCharge', sa.BigInteger(), nullable=False),
    sa.Column('conferenceTrack', sa.String(length=255), nullable=False),
    sa.Column('chairDesignation', sa.String(length=255), nullable=False),
    sa.Column('chairName', sa.String(length=255), nullable=False),
    sa.Column('coChairDesignation', sa.String(length=255), nullable=True),
    sa.Column('conferenceBoardDesignation', sa.String(length=255), nullable=True),
    sa.Column('conferenceBoardName', sa.String(length=255), nullable=True),
    sa.Column('organizingCommittee', sa.String(length=255), nullable=True),
    sa.Column('internationalAdvisoryBoard', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['inCharge'], [USER_ID], ),
    sa.PrimaryKeyConstraint('conferenceID')
    )
    op.create_table('conference_editors_reviewers',
    sa.Column('conferenceEditorReviewerID', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('conferenceID', sa.BigInteger(), nullable=False),
    sa.Column('editorID', sa.BigInteger(), nullable=False),
    sa.Column('associateEditorID', sa.BigInteger(), nullable=True),
    sa.Column('reviewerID', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['associateEditorID'], [USER_ID], ),
    sa.ForeignKeyConstraint(['conferenceID'], [CONFERENCE_ID], ),
    sa.ForeignKeyConstraint(['editorID'], [USER_ID], ),
    sa.ForeignKeyConstraint(['reviewerID'], [USER_ID], ),
    sa.PrimaryKeyConstraint('conferenceEditorReviewerID')
    )
    op.create_table('conference_roster',
    sa.Column('rosterID', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('conferenceID', sa.BigInteger(), nullable=False),
    sa.Column('authorID', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['authorID'], [USER_ID], ),
    sa.ForeignKeyConstraint(['conferenceID'], [CONFERENCE_ID], ),
    sa.PrimaryKeyConstraint('rosterID')
    )
    op.create_table('events',
    sa.Column('eventID', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('eventName', sa.String(length=255), nullable=False),
    sa.Column('venue', sa.String(length=255), nullable=False),
    sa.Column('regOpen', sa.DateTime(), nullable=False),
    sa.Column('regClose', sa.DateTime(), nullable=False),
    sa.Column('eventStart', sa.DateTime(), nullable=False),
    sa.Column('eventEnd', sa.DateTime(), nullable=False),
    sa.Column('maxParticipants', sa.Integer(), nullable=False),
    sa.Column('conferenceID', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['conferenceID'], [CONFERENCE_ID], ),
    sa.PrimaryKeyConstraint('eventID')
    )
    op.create_table('submissions',
    sa.Column('submissionID', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('ifPubApplicable', sa.Boolean(), nullable=False),
    sa.Column('plagPolicy', sa.Integer(), nullable=False),
    sa.Column('samplePaper', sa.String(length=255), nullable=False),
    sa.Column('conferenceID', sa.BigInteger(), nullable=False),
    sa.Column('submissionDeadline', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['conferenceID'], [CONFERENCE_ID], ),
    sa.PrimaryKeyConstraint('submissionID')
    )
    op.create_table('papers',
    sa.Column('paperID', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('paperName', sa.String(length=255), nullable=False),
    sa.Column('authorID', sa.BigInteger(), nullable=False),
    sa.Column('paperLink', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['authorID'], ['conference_roster.authorID'], ),
    sa.PrimaryKeyConstraint('paperID')
    )
    op.create_table('paper_status',
    sa.Column('statusID', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('paperID', sa.BigInteger(), nullable=False),
    sa.Column('isFinalRevision', sa.Boolean(), nullable=True),
    sa.Column('toPublish', sa.Boolean(), nullable=True),
    sa.Column('presentationStatus', sa.Enum('Accept', 'Reject', 'Soft Accept', 'Soft Reject'), nullable=True),
    sa.ForeignKeyConstraint(['paperID'], [PAPER_ID], ),
    sa.PrimaryKeyConstraint('statusID')
    )
    op.create_table('submitted_papers',
    sa.Column('submissionID', sa.BigInteger(), nullable=False),
    sa.Column('paperID', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['paperID'], [PAPER_ID], ),
    sa.ForeignKeyConstraint(['submissionID'], ['submissions.submissionID'], ),
    sa.PrimaryKeyConstraint('submissionID', 'paperID')
    )
    op.create_table('paper_revisions',
    sa.Column('revisionID', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('paperID', sa.BigInteger(), nullable=False),
    sa.Column('revisionNumber', sa.Integer(), nullable=False),
    sa.Column('revisionLink', sa.String(length=255), nullable=False),
    sa.Column('revisionDateTime', sa.DateTime(), nullable=False),
    sa.Column('submissionID', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['paperID'], [PAPER_ID], ),
    sa.ForeignKeyConstraint(['submissionID'], ['submitted_papers.submissionID'], ),
    sa.PrimaryKeyConstraint('revisionID')
    )
    op.create_table('journal_submissions',
    sa.Column('jSubmissionID', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('journalID', sa.BigInteger(), nullable=True),
    sa.Column('revisionChanges', sa.Enum('Revise with Major Changes', 'Revise with Minor Changes', 'Accepted'), nullable=True),
    sa.Column('currentRevisionID', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['currentRevisionID'], ['paper_revisions.revisionID'], ),
    sa.ForeignKeyConstraint(['journalID'], ['journals.journalID'], ),
    sa.PrimaryKeyConstraint('jSubmissionID')
    )
    op.create_table('reviews',
    sa.Column('reviewID', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('editorID', sa.BigInteger(), nullable=False),
    sa.Column('associateEditorID', sa.BigInteger(), nullable=True),
    sa.Column('reviewerID', sa.BigInteger(), nullable=False),
    sa.Column('revisionID', sa.BigInteger(), nullable=False),
    sa.Column('process', sa.Enum('Single Blind Review', 'Double Blind Review'), nullable=False),
    sa.Column('reviewEndDeadline', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['associateEditorID'], ['conference_editors_reviewers.associateEditorID'], ),
    sa.ForeignKeyConstraint(['editorID'], ['conference_editors_reviewers.editorID'], ),
    sa.ForeignKeyConstraint(['reviewerID'], ['conference_editors_reviewers.reviewerID'], ),
    sa.ForeignKeyConstraint(['revisionID'], ['paper_revisions.revisionID'], ),
    sa.PrimaryKeyConstraint('reviewID')
    )
    op.create_table('review_comments',
    sa.Column('reviewCommentID', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('reviewID', sa.BigInteger(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('commentDateTime', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['reviewID'], ['reviews.reviewID'], ),
    sa.PrimaryKeyConstraint('reviewCommentID')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('review_comments')
    op.drop_table('reviews')
    op.drop_table('journal_submissions')
    op.drop_table('paper_revisions')
    op.drop_table('submitted_papers')
    op.drop_table('paper_status')
    op.drop_table('papers')
    op.drop_table('submissions')
    op.drop_table('events')
    op.drop_table('conference_roster')
    op.drop_table('conference_editors_reviewers')
    op.drop_table('conferences')
    op.drop_table('users')
    op.drop_table('journals')
    op.drop_table('institutions')
    # ### end Alembic commands ###
